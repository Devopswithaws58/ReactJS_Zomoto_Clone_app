pipeline{
    agent any
    tools {
        jdk 'JDK17'
        nodejs 'NodeJS-18'
    }
    environment {
        SCANNER_HOME=tool 'sonar-scanner'
    }
    stages {
        stage ('clean workspace'){
            steps {
                cleanWs()
            }
        }
        stage ('checkout from GIT') {
            steps {
                git branch: 'main', 
                credentialsId: 'GIT-HUB', 
                url: 'https://github.com/Devopswithaws58/ReactJS_Zomoto_Clone_app.git'
            }
        }
        stage ('code review') {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh '''
                    $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=zomato \
                    -Dsonar.projectKey=zomato '''
                }
            }
        }
        stage ('quality gate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
                }
            }
        }
        stage ('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }
        stage('OWASP FS SCAN') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'dependency-check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage('TRIVY FS SCAN') {
            steps {
                sh "trivy fs . > trivyfs.txt"
            }
        }
        stage ('docker build & push') {
            steps{
                script{
                    withDockerRegistry(credentialsId: 'docker-hub', toolName: 'docker') {
                        sh 'docker build -t zomato .'
                        sh 'docker tag zomato devopswthaws58/zomato:latest'
                        sh 'docker push devopswthaws58/zomato:latest'
                    }
                }
            }
        }
        stage('trivy image scan') {
            steps{
                sh 'trivy image devopswthaws58/zomato:latest > trivy.txt'
            }
        }
        stage('deploy to container') {
            steps{
                sh 'docker run -d --name zomato -p 3000:3000 devopswthaws58/zomato:latest'
            }
        }
    }
}